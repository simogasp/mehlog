name: CI

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 8 * * 1"

jobs:
  build-and-test:
    name: ${{ matrix.os }} - ${{ matrix.compiler }} - ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        build_type: [Debug, Release]
        compiler: [default]
        cc: ['']
        cxx: ['']
        include:
          - os: ubuntu-latest
            build_type: Debug
            compiler: gcc
            cc: gcc-13
            cxx: g++-13
          - os: ubuntu-latest
            build_type: Release
            compiler: gcc
            cc: gcc-13
            cxx: g++-13
          - os: ubuntu-latest
            build_type: Debug
            compiler: clang
            cc: clang-17
            cxx: clang++-17
          - os: ubuntu-latest
            build_type: Release
            compiler: clang
            cc: clang-17
            cxx: clang++-17
          - os: macos-latest
            build_type: Debug
            compiler: default
          - os: macos-latest
            build_type: Release
            compiler: default
          - os: windows-latest
            build_type: Debug
            compiler: default
          - os: windows-latest
            build_type: Release
            compiler: default
        exclude:
          - os: ubuntu-latest
            compiler: default
          - os: macos-latest
            compiler: default
          - os: windows-latest
            compiler: default

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install GCC 13 (Ubuntu)
      if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'gcc'
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-13 g++-13

    - name: Install Clang 17 (Ubuntu)
      if: matrix.os == 'ubuntu-latest' && matrix.compiler == 'clang'
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17
        sudo apt-get install -y clang-17

    - name: Configure CMake
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DMEHLOG_BUILD_EXAMPLES=ON -DMEHLOG_BUILD_TESTS=ON -DCMAKE_VERBOSE_MAKEFILE=ON
      env:
        CC: ${{ matrix.cc }}
        CXX: ${{ matrix.cxx }}

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }} --verbose --parallel

    - name: Run tests
      run: ctest --test-dir build --output-on-failure --build-config ${{ matrix.build_type }}

